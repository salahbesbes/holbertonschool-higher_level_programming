Importing the function from the module:
    >>> MyList = __import__("1-my_list").MyList

Testing for module docstring:
    >>> m = __import__("1-my_list").__doc__
    >>> len(m) > 1
    True

Testing for class docstring:
    >>> c = __import__("1-my_list").MyList.__doc__
    >>> len(c) > 1
    True

Testing for method docstring:
	>>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(mod) > 1
	True

>>> MyList = __import__('1-my_list').MyList
>>> new = MyList()
>>> new
[]
>>> new.append(5)
>>> new.append(4)
>>> new.append(3)
>>> new.append(2)
>>> new.append(1)
>>> print(new)
[5, 4, 3, 2, 1]
>>> new.print_sorted()
[1, 2, 3, 4, 5]
>>> print(new)
[5, 4, 3, 2, 1]
>>> new.pop(0)
5

>>> new.pop(15)
Traceback (most recent call last):
...
IndexError: pop index out of range

>>> print(new)
[4, 3, 2, 1]
>>> new.index(4)
0
>>> new.index(6)
Traceback (most recent call last):
...
ValueError: 6 is not in list

>>> new.insert(0, (1,))
>>> new
[(1,), 4, 3, 2, 1]
>>> new.insert(50, (2, 2))
>>> new
[(1,), 4, 3, 2, 1, (2, 2)]

Testing that MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Testing for empty list:
	>>> l = MyList()
	>>> l.print_sorted()
	[]
